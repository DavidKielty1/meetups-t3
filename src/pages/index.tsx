import { MouseEventHandler, useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";

import { Header } from "~/components/Header";

import { api, type RouterOutputs } from "../utils/api";

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>T3 Meetups App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Content />
      </main>
    </>
  );
};

export default Home;

type Meetup = RouterOutputs["meetup"]["getAll"][0];

const Content: React.FC = () => {
  const [selectedMeetup, setSelectedMeetup] = useState<Meetup | null>(null);

  const { data: sessionData } = useSession();

  const { data: meetups, refetch: refetchMeetups } = api.meetup.getAll.useQuery(
    undefined, // no input
    {
      enabled: sessionData?.user !== undefined,
      onSuccess: (data) => {
        setSelectedMeetup(selectedMeetup ?? data[0] ?? null);
      },
    }
  );

  const createTopic = api.meetup.create.useMutation({
    onSuccess: () => {
      void refetchMeetups();
    },
  });

  const deleteMeetup = api.meetup.delete.useMutation({
    onSuccess: () => {
      void refetchMeetups();
    },
  });

  return (
    <div className="mx-5 mt-5 grid grid-cols-4 gap-2">
      <div className="px-2">
        <ul className="menu rounded-box w-72 bg-base-100 p-2">
          {meetups?.map((meetup) => (
            <li key={meetup.id}>
              <div className="flex justify-between">
                <a
                  href="#"
                  onClick={(evt) => {
                    evt.preventDefault();
                    setSelectedMeetup(meetup);
                  }}
                >
                  {meetup.title}
                </a>
                <button
                  className="font-semibold text-red-600"
                  data-id={meetup.id}
                  onClick={(event: React.MouseEvent<HTMLButtonElement>) => {
                    const button = event.target as HTMLButtonElement;
                    const params = { id: button.dataset.id || "" };
                    deleteMeetup.mutate(params);
                  }}
                >
                  x
                </button>
              </div>
            </li>
          ))}
        </ul>
        <div className="divider" />
        <input
          type="text"
          placeholder="New Meetup"
          className="input-bordered input input-sm w-full"
          onKeyDown={(e) => {
            if (e.key === "Enter") {
              createTopic.mutate({
                title: e.currentTarget.value,
              });
              e.currentTarget.value = "";
            }
          }}
        ></input>
      </div>
      <div className="col-span-3"></div>
    </div>
  );
};
